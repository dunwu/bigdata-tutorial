(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{453:function(e,t,a){"use strict";a.r(t);var v=a(20),l=Object(v.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"flume"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flume"}},[e._v("#")]),e._v(" Flume")]),e._v(" "),a("blockquote",[a("p",[a("strong",[e._v("Sqoop 是一个主要在 Hadoop 和关系数据库之间进行批量数据迁移的工具。")])])]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#flume-%E7%AE%80%E4%BB%8B"}},[e._v("Flume 简介")]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#%E4%BB%80%E4%B9%88%E6%98%AF-flume-"}},[e._v("什么是 Flume ？")])]),e._v(" "),a("li",[a("a",{attrs:{href:"#%E5%BA%94%E7%94%A8%E5%9C%BA%E6%99%AF"}},[e._v("应用场景")])])])]),e._v(" "),a("li",[a("a",{attrs:{href:"#flume-%E5%8E%9F%E7%90%86"}},[e._v("Flume 原理")]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#flume-%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5"}},[e._v("Flume 基本概念")])]),e._v(" "),a("li",[a("a",{attrs:{href:"#flume-%E5%9F%BA%E6%9C%AC%E7%BB%84%E4%BB%B6"}},[e._v("Flume 基本组件")])]),e._v(" "),a("li",[a("a",{attrs:{href:"#flume-%E6%95%B0%E6%8D%AE%E6%B5%81"}},[e._v("Flume 数据流")])])])]),e._v(" "),a("li",[a("a",{attrs:{href:"#%E8%B5%84%E6%BA%90"}},[e._v("资源")])])]),e._v(" "),a("h2",{attrs:{id:"flume-简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flume-简介"}},[e._v("#")]),e._v(" Flume 简介")]),e._v(" "),a("h3",{attrs:{id:"什么是-flume"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是-flume"}},[e._v("#")]),e._v(" 什么是 Flume ？")]),e._v(" "),a("p",[e._v("Flume 是一个分布式海量数据采集、聚合和传输系统。")]),e._v(" "),a("p",[e._v("特点")]),e._v(" "),a("ul",[a("li",[e._v("基于事件的海量数据采集")]),e._v(" "),a("li",[e._v("数据流模型：Source -> Channel -> Sink")]),e._v(" "),a("li",[e._v("事务机制：支持重读重写，保证消息传递的可靠性")]),e._v(" "),a("li",[e._v("内置丰富插件：轻松与各种外部系统集成")]),e._v(" "),a("li",[e._v("高可用：Agent 主备切换")]),e._v(" "),a("li",[e._v("Java 实现：开源，优秀的系统设计")])]),e._v(" "),a("h3",{attrs:{id:"应用场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#应用场景"}},[e._v("#")]),e._v(" 应用场景")]),e._v(" "),a("h2",{attrs:{id:"flume-原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flume-原理"}},[e._v("#")]),e._v(" Flume 原理")]),e._v(" "),a("h3",{attrs:{id:"flume-基本概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flume-基本概念"}},[e._v("#")]),e._v(" Flume 基本概念")]),e._v(" "),a("ul",[a("li",[e._v("Event：事件，最小数据传输单元，由 Header 和 Body 组成。")]),e._v(" "),a("li",[e._v("Agent：代理，JVM 进程，最小运行单元，由 Source、Channel、Sink 三个基本组件构成，负责将外部数据源产生的数据以 Event 的形式传输到目的地\n"),a("ul",[a("li",[e._v("Source：负责对接各种外部数据源，将采集到的数据封装成 Event，然后写入 Channel")]),e._v(" "),a("li",[e._v("Channel：Event 暂存容器，负责保存 Source 发送的 Event，直至被 Sink 成功读取")]),e._v(" "),a("li",[e._v("Sink：负责从 Channel 读取 Event，然后将其写入外部存储，或传输给下一阶段的 Agent")]),e._v(" "),a("li",[e._v("映射关系：1 个 Source -> 多个 Channel，1 个 Channel -> 多个 Sink，1 个 Sink -> 1 个 Channel")])])])]),e._v(" "),a("h3",{attrs:{id:"flume-基本组件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flume-基本组件"}},[e._v("#")]),e._v(" Flume 基本组件")]),e._v(" "),a("h4",{attrs:{id:"source-组件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#source-组件"}},[e._v("#")]),e._v(" Source 组件")]),e._v(" "),a("ul",[a("li",[e._v("对接各种外部数据源，将采集到的数据封装成 Event，然后写入 Channel")]),e._v(" "),a("li",[e._v("一个 Source 可向多个 Channel 发送 Event")]),e._v(" "),a("li",[e._v("Flume 内置类型丰富的 Source，同时用户可自定义 Source")])]),e._v(" "),a("h4",{attrs:{id:"channel-组件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#channel-组件"}},[e._v("#")]),e._v(" Channel 组件")]),e._v(" "),a("ul",[a("li",[e._v("Event 中转暂存区，存储 Source 采集但未被 Sink 读取的 Event")]),e._v(" "),a("li",[e._v("为了平衡 Source 采集、Sink 读取的速度，可视为 Flume 内部的消息队列")]),e._v(" "),a("li",[e._v("线程安全并具有事务性，支持 Source 写失败重写和 Sink 读失败重读")])]),e._v(" "),a("h4",{attrs:{id:"sink-组件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sink-组件"}},[e._v("#")]),e._v(" Sink 组件")]),e._v(" "),a("ul",[a("li",[e._v("从 Channel 读取 Event，将其写入外部存储，或传输到下一阶段的 Agent")]),e._v(" "),a("li",[e._v("一个 Sink 只能从一个 Channel 中读取 Event")]),e._v(" "),a("li",[e._v("Sink 成功读取 Event 后，向 Channel 提交事务，Event 被删除，否则 Channel 会等待 Sink 重新读取")])]),e._v(" "),a("h3",{attrs:{id:"flume-数据流"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flume-数据流"}},[e._v("#")]),e._v(" Flume 数据流")]),e._v(" "),a("p",[e._v("单层架构")]),e._v(" "),a("p",[e._v("优点：架构简单，使用方便，占用资源较少\n缺点\n如果采集的数据源或 Agent 较多，将 Event 写入到 HDFS 会产生很多小文件\n外部存储升级维护或发生故障，需对采集层的所有 Agent 做处理，人力成本较高，系统稳定性较差\n系统安全性较差\n数据源管理较混乱")]),e._v(" "),a("h2",{attrs:{id:"资源"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#资源"}},[e._v("#")]),e._v(" 资源")])])}),[],!1,null,null,null);t.default=l.exports}}]);